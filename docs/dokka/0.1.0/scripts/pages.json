[{"name":"abstract fun test(first: T, second: T): Boolean","description":"io.klibs.collections.SortTest.test","location":"heap/io.klibs.collections/-sort-test/test.html","searchKeys":["test","abstract fun test(first: T, second: T): Boolean","io.klibs.collections.SortTest.test"]},{"name":"class Heap<T>","description":"io.klibs.collections.Heap","location":"heap/io.klibs.collections/-heap/index.html","searchKeys":["Heap","class Heap<T>","io.klibs.collections.Heap"]},{"name":"fun <T : Comparable<T>> maxHeapOf(values: Iterable<T>): Heap<T>","description":"io.klibs.collections.maxHeapOf","location":"heap/io.klibs.collections/max-heap-of.html","searchKeys":["maxHeapOf","fun <T : Comparable<T>> maxHeapOf(values: Iterable<T>): Heap<T>","io.klibs.collections.maxHeapOf"]},{"name":"fun <T : Comparable<T>> maxHeapOf(vararg values: T): Heap<T>","description":"io.klibs.collections.maxHeapOf","location":"heap/io.klibs.collections/max-heap-of.html","searchKeys":["maxHeapOf","fun <T : Comparable<T>> maxHeapOf(vararg values: T): Heap<T>","io.klibs.collections.maxHeapOf"]},{"name":"fun <T : Comparable<T>> minHeapOf(values: Iterable<T>): Heap<T>","description":"io.klibs.collections.minHeapOf","location":"heap/io.klibs.collections/min-heap-of.html","searchKeys":["minHeapOf","fun <T : Comparable<T>> minHeapOf(values: Iterable<T>): Heap<T>","io.klibs.collections.minHeapOf"]},{"name":"fun <T : Comparable<T>> minHeapOf(vararg values: T): Heap<T>","description":"io.klibs.collections.minHeapOf","location":"heap/io.klibs.collections/min-heap-of.html","searchKeys":["minHeapOf","fun <T : Comparable<T>> minHeapOf(vararg values: T): Heap<T>","io.klibs.collections.minHeapOf"]},{"name":"fun <T> Heap(initialCapacity: Int = 8, scaleFactor: Float = 1.5f, maxSize: Int = Int.MAX_VALUE, sortTest: SortTest<T>)","description":"io.klibs.collections.Heap.Heap","location":"heap/io.klibs.collections/-heap/-heap.html","searchKeys":["Heap","fun <T> Heap(initialCapacity: Int = 8, scaleFactor: Float = 1.5f, maxSize: Int = Int.MAX_VALUE, sortTest: SortTest<T>)","io.klibs.collections.Heap.Heap"]},{"name":"fun <T> heapOf(values: Iterable<T>, fn: SortTest<T>): Heap<T>","description":"io.klibs.collections.heapOf","location":"heap/io.klibs.collections/heap-of.html","searchKeys":["heapOf","fun <T> heapOf(values: Iterable<T>, fn: SortTest<T>): Heap<T>","io.klibs.collections.heapOf"]},{"name":"fun <T> heapOf(vararg values: T, fn: SortTest<T>): Heap<T>","description":"io.klibs.collections.heapOf","location":"heap/io.klibs.collections/heap-of.html","searchKeys":["heapOf","fun <T> heapOf(vararg values: T, fn: SortTest<T>): Heap<T>","io.klibs.collections.heapOf"]},{"name":"fun insert(value: T)","description":"io.klibs.collections.Heap.insert","location":"heap/io.klibs.collections/-heap/insert.html","searchKeys":["insert","fun insert(value: T)","io.klibs.collections.Heap.insert"]},{"name":"fun interface SortTest<T>","description":"io.klibs.collections.SortTest","location":"heap/io.klibs.collections/-sort-test/index.html","searchKeys":["SortTest","fun interface SortTest<T>","io.klibs.collections.SortTest"]},{"name":"fun isEmpty(): Boolean","description":"io.klibs.collections.Heap.isEmpty","location":"heap/io.klibs.collections/-heap/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","io.klibs.collections.Heap.isEmpty"]},{"name":"fun isNotEmpty(): Boolean","description":"io.klibs.collections.Heap.isNotEmpty","location":"heap/io.klibs.collections/-heap/is-not-empty.html","searchKeys":["isNotEmpty","fun isNotEmpty(): Boolean","io.klibs.collections.Heap.isNotEmpty"]},{"name":"fun peekNext(): T","description":"io.klibs.collections.Heap.peekNext","location":"heap/io.klibs.collections/-heap/peek-next.html","searchKeys":["peekNext","fun peekNext(): T","io.klibs.collections.Heap.peekNext"]},{"name":"inline fun forEach(fn: (T) -> Unit)","description":"io.klibs.collections.Heap.forEach","location":"heap/io.klibs.collections/-heap/for-each.html","searchKeys":["forEach","inline fun forEach(fn: (T) -> Unit)","io.klibs.collections.Heap.forEach"]},{"name":"inline fun forEachIndexed(fn: (i: Int, it: T) -> Unit)","description":"io.klibs.collections.Heap.forEachIndexed","location":"heap/io.klibs.collections/-heap/for-each-indexed.html","searchKeys":["forEachIndexed","inline fun forEachIndexed(fn: (i: Int, it: T) -> Unit)","io.klibs.collections.Heap.forEachIndexed"]},{"name":"inline operator fun plusAssign(value: T)","description":"io.klibs.collections.Heap.plusAssign","location":"heap/io.klibs.collections/-heap/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(value: T)","io.klibs.collections.Heap.plusAssign"]},{"name":"operator fun hasNext(): Boolean","description":"io.klibs.collections.Heap.hasNext","location":"heap/io.klibs.collections/-heap/has-next.html","searchKeys":["hasNext","operator fun hasNext(): Boolean","io.klibs.collections.Heap.hasNext"]},{"name":"operator fun iterator(): Heap<T>","description":"io.klibs.collections.Heap.iterator","location":"heap/io.klibs.collections/-heap/iterator.html","searchKeys":["iterator","operator fun iterator(): Heap<T>","io.klibs.collections.Heap.iterator"]},{"name":"operator fun next(): T","description":"io.klibs.collections.Heap.next","location":"heap/io.klibs.collections/-heap/next.html","searchKeys":["next","operator fun next(): T","io.klibs.collections.Heap.next"]},{"name":"val capacity: Int","description":"io.klibs.collections.Heap.capacity","location":"heap/io.klibs.collections/-heap/capacity.html","searchKeys":["capacity","val capacity: Int","io.klibs.collections.Heap.capacity"]},{"name":"val maxSize: Int","description":"io.klibs.collections.Heap.maxSize","location":"heap/io.klibs.collections/-heap/max-size.html","searchKeys":["maxSize","val maxSize: Int","io.klibs.collections.Heap.maxSize"]},{"name":"var size: Int","description":"io.klibs.collections.Heap.size","location":"heap/io.klibs.collections/-heap/size.html","searchKeys":["size","var size: Int","io.klibs.collections.Heap.size"]}]
